run:
  go: "1.21"
  timeout: 5m
  skip-dirs:
    - (\/|^)gen(\/|$)
linters:
  enable-all: true
  disable:
    - godot
    - testpackage
    - ireturn
    - maligned
    - interfacer
    - varnamelen
    - golint
    - exhaustivestruct
    - goerr113
    - depguard
    - testifylint
    - paralleltest
    - protogetter
    # deprecated
    - nosnakecase
    - structcheck
    - deadcode
    - scopelint
    - varcheck
    - ifshort
linters-settings:
  gci:
    sections:
      - standard
      - default
      - prefix(git.vseinstrumenti.net)
    section-separators:
      - newLine
  godox:
    keywords:
      - BUG
      - FIXME
  gocyclo:
    min-complexity: 20
  cyclop:
    max-complexity: 20
  nestif:
    min-complexity: 10
  dupl:
    threshold: 160
  funlen:
    lines: 80
    statements: 40
  gosec:
    excludes:
      - G402
  tagliatelle:
    case:
      use-field-name: false
      rules:
        json: snake
        yaml: camel
        xml: camel
        bson: camel
        avro: snake
        mapstructure: kebab
  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(
      - .WithMessage(
      - .WithMessagef(
      - .WithStack(
  interfacebloat:
    max: 20
  errorlint:
    asserts: false
issues:
  max-same: 0
  max-per-linter: 0
  exclude-rules:
    - path: "cmd"
      linters:
        - revive
        - wsl
        - perfsprint
        - nolintlint

    - path: "_test.go"
      linters:
        - wsl
        - revive
        - inamedparam
        - nolintlint

    - path: "internal/build"
      linters:
        - revive
        - perfsprint

    - path: "internal/journallog"
      linters:
        - perfsprint
        - nolintlint
        - lll

    - path: "internal/item"
      linters:
        - lll
        - nolintlint

    - path: "internal/config"
      linters:
        - perfsprint
        - exhaustruct
        - nolintlint

    - path: "internal/note"
      linters:
        - nolintlint

    - source: "^//go:generate "
      linters:
        - lll

    - text: "exported: comment on exported"
      linters:
        - revive

    - text: "package-comments: package comment should be of the form"
      linters:
        - revive

    - text: "should have a package comment"
      linters:
        - stylecheck
        - revive

    - text: "should have comment or be unexported"
      linters:
        - stylecheck
        - revive

    - text: "or a comment on this block"
      linters:
        - stylecheck
        - revive
  exclude-use-default: false
