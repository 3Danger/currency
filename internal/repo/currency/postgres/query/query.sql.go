// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package query

import (
	"context"

	"github.com/shopspring/decimal"
)

const currency = `-- name: Currency :one
SELECT code, rate_to_usd, updated_at
FROM currency
WHERE code = $1
`

func (q *Queries) Currency(ctx context.Context, code string) (Currency, error) {
	row := q.db.QueryRow(ctx, currency, code)
	var i Currency
	err := row.Scan(&i.Code, &i.RateToUsd, &i.UpdatedAt)
	return i, err
}

const upsert = `-- name: Upsert :exec
INSERT INTO currency (code, rate_to_usd, updated_at)
VALUES ($1, $2, NOW())
ON CONFLICT (code) DO UPDATE
    SET rate_to_usd = EXCLUDED.rate_to_usd,
        updated_at = EXCLUDED.updated_at
`

type UpsertParams struct {
	Code      string
	Ratetousd decimal.Decimal
}

func (q *Queries) Upsert(ctx context.Context, arg UpsertParams) error {
	_, err := q.db.Exec(ctx, upsert, arg.Code, arg.Ratetousd)
	return err
}
